require 'json'
require 'open-uri'
require 'openfoodfacts'

class FoodsController < ApplicationController
  before_action :set_food, only: [:show, :edit, :update]
  before_action :set_meal, only: [:index, :create, :edit, :update, :show, :new]
  before_action :set_user
  before_action :set_api, only: :show

  def index
    @food = Food.new
    @foods = Food.all

    @quotes = ["Ajoute un ingrÃ©dient ðŸ¤Œ", "C'est l'heure de l'ingrÃ©dient secret ðŸ‘€", "Un autre ingrÃ©dient chef ? ðŸ«¡"]

    @chef_quotes = ["L'apÃ©ritif, c'est la priÃ¨re du soir des FranÃ§ais - Paul Morand", "La cuisine simple, câ€™est ce quâ€™il y a de plus compliquÃ© - JoÃ«l Robuchon", " Il nâ€™y a pas de bonne cuisine si au dÃ©part elle nâ€™est pas faite par amitiÃ© pour celui ou celle Ã  qui elle est destinÃ©e - Paul Bocuse", "La Cuisine, câ€™est lâ€™envers du dÃ©cor, lÃ  oÃ¹ sâ€™activent les hommes et femmes pour le plaisir des autresâ€¦ - Bernard Loiseau", "La perfection nâ€™est pas de ce monde et certainement pas dans mon mÃ©tier. En tout cas, tous les jours on se remet en question, on essaie de sâ€™amÃ©liorer, demain on sera meilleur quâ€™hier - Alain Ducasse", "On se dÃ©fend de lire ce quâ€™on Ã©crit sur nous, dâ€™abord parce que je nâ€™ai pas le temps. â€¦ Je prÃ©fÃ¨re lire ce quâ€™on Ã©crit sur les autres. Ca construit - Alain Ducasse", "[...] Regardez ce que lâ€™on rabÃ¢che aux petits enfants : la curiositÃ© est un vilain dÃ©faut ! Mais non Â« pÃ©tard, il faut les encourager Ã  Ãªtre curieux ! - Guy Savoy", "Nous avons besoins de ceux qui font des produits exceptionnels et eux ont besoins de nous, qui magnifions les produits. Nous avons besoins les uns les autres - Guy Savoy"]
  end

  def new
    @food = Food.new
  end

  def create
    @food = Food.new(food_params)
    @food.meal = @meal

    if @food.save
      redirect_to edit_meal_food_path(@meal, @food)
    else
      render :new, status: :unprocessable_entity
    end
  end

  def edit
    @products = Openfoodfacts::Product.search(@food.name)
  end

  def update

    if params[:food]["code"].present?
      code = params[:food]["code"]
      @product = Openfoodfacts::Product.get(code, locale: 'fr')
      @food.name = @product.product_name
      @food.calories = @product.nutriments.to_hash['energy-kcal_100g']
      # raise

      if @food.update(food_params)
        redirect_to meal_food_path(@meal, @food)
      else
        render :edit, status: :unprocessable_entity
      end

    else
      @food.name = params[:food]['name']
      @products = Openfoodfacts::Product.search(@food.name)

      if @food.update(food_params)
        redirect_to edit_meal_food_path(@meal, @food)
      else
        render :edit, status: :unprocessable_entity
      end
    end

  end

  def show
    @actual_calories = @food.calories.to_i * @food.quantity.to_i/100
    @product_image = @product['product']['image_front_thumb_url']
  end

  def search
  end

  private

  def food_params
    params.require(:food).permit(:name, :calories, :code, :quantity)
  end

  def set_food
    @food = Food.find(params[:id])
  end

  def set_meal
    @meal = Meal.find(params[:meal_id])
  end

  def set_user
    @user = current_user
  end

  def set_api
    url = "https://world.openfoodfacts.org/api/v0/product/#{@food.code}.json"
    product_serialized = URI.open(url).read
    @product = JSON.parse(product_serialized)
  end
end
